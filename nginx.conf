user  root;
#运行用户，关系到是否有权限移动文件，root为最高权限

worker_processes    4;
#设置进程数，一般与cpu数量相同

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

	#上传文件的处理程序目录，可以移动文件，返回文件基本信息等
    perl_modules  /etc/nginx-new/perl/lib;
    #上传文件的处理程序名称
    perl_require  img_upload_handler.pm;
    #搜索文件的处理程序名称
	perl_require  img_fetch_handler.pm;
	
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    client_body_buffer_size 80k; 
    #缓冲区代理缓冲用户端请求的最大字节数，过大容易引起错误而导致上传回滚
    client_max_body_size 20m;  
#上传文件的大小限制设定
    #gzip  on;


    upload_progress proxied 50k;
    #每次链接存放跟踪信息的大小，与上传进度显示相关    

    server {
        listen       80;
        #访问端口
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;


        location  / {
             root html;
             index  index.html index.htm;
#             upload_store data; 
 #            upload_limit_rate 1024k;
        }

	location /a {
		proxy_pass http://127.0.0.1:80/handle/;
	}	
       location /handle {
            perl  img_upload_handler::process;
            #指向perl程序
        }
   
#上传以及返回信息相关配置
	location = /upload {
           upload_pass /a; 
           #设置上传的处理程序
 	   upload_store data; 
           #缓存目录
           upload_pass_args on;
           #开启，把前端脚本请求的参数会传给后端的脚本语言
           upload_limit_rate 1024k;
           #上传速度大小限制
           upload_set_form_field "${upload_field_name}_name" $upload_file_name;
           #文件名称
           upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
           #文件类型
   		    upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;
            #文件路径
 
   		 # Upload模块自动生成的一些信息，如文件大小与文件md5值
    		upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
    		upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;

        	track_uploads proxied 30s;
           #30s表示每次链接处理完毕后，链接会保持30s
	}

# 进度相关配置
	location ^~ /progress {
            upload_progress_json_output;
	    # report uploads tracked in the 'proxied' zone
            report_uploads proxied;
        }

# 拦截图片请求
	location ~ \.jpg$ {
            perl  img_fetch_handler::image;
        }
		
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
